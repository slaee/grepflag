#!/bin/bash

show_help() {
	printf "grepflag - A tool to find and print flag in files\nBy: r3dh4ir\n\n"
	printf "Usage: $ grepflag [FILE | [OPTIONS] [DIRECTORY|SUB-DIRECTORIES]] \n\n"
	echo "Strings with grepflag     $ strings flag.txt | grepflag"
	echo "For cat binary file try   $ cat flag.img | grepflag -c"
	echo "If non binary file try    $ grepflag flag.txt"
	echo "OPTIONS:"
	echo "  -r          Search recursively in directories"
	echo "  -c, --cat   Use when a binary file to print. Only works with cat command."
	printf "  -h, --help  Show this help message\n\n"
	exit 0
}

regex='.*\{[^{}]+\}'
ors_regex='{ORS = (/}$/) ? "\n\n" : ""; print}'

if [[ $# -eq 0 ]]; then
	if [[ -p /dev/stdin ]]; then
		pcregrep -aoM "$regex" "$@" | awk "$ors_regex" | sed 's/ //g'
	else
		printf "Error: No parameter provided.\n\n"
		show_help
	fi
elif [[ $# -gt 0 ]]; then
	while [[ $# -gt 0 ]]; do
		case $1 in
		-r)
			if [ ! -d "$2" ]; then
				printf "Error: The parameter for -r should be a directory.\n\n"
				exit 1
			fi
			pcregrep -aoMr "$regex" "$@" | awk "$ors_regex" | awk -F ':' '{print $2}' | sed 's/ //g'
			exit 1
			;;
		-c | --cat)
			if [[ -p /dev/stdin ]]; then
				grep -aoP "$regex"
			else 
				pritnf "Error: The parameter for -c should be run on a pipe when using cat command.\n\n"
				show_help
			fi
			break
			;;
		-h | --help)
			show_help
			;;
		*)
			if [[ -f "$1" ]]; then
				strings_output="$(strings "$1" | pcregrep -aoM "$regex" | awk "$ors_regex" | sed 's/ //g')"
				cat_output="$(cat "$@" | pcregrep -aoM "$regex" | awk "$ors_regex" | sed 's/ //g')"

				if [ "$strings_output" = "$cat_output" ]; then
					echo "$strings_output"
				else
					strings "$1" | pcregrep -aoM "$regex" | awk "$ors_regex" | sed 's/ //g'
					cat "$@" | pcregrep -aoM "$regex" | awk "$ors_regex" | sed 's/ //g'
					cat "$@" | grep -aoP "$regex" | sed 's/ //g'
				fi
			else 
				printf "Error: File '%s' does not exist.\n\n" "$1"
			fi
			exit 1
			;;
		esac
	done
fi
